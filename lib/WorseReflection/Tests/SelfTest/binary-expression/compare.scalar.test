<?php

function foo(): string {}

// strings
wrAssertType('bool', foo() === "foo", 'identity');
wrAssertType('true', "1" == "1", 'equality');
wrAssertType('false', "2" == "1", 'equality');
wrAssertType('true', "1" === "1", 'identity');
wrAssertType('bool', "1" === foo(), 'identity');
wrAssertType('false', "1" !== "1", 'not identity 1');
wrAssertType('true', "2" !== "1", 'not identity 2');
wrAssertType('false', "1" != "1", 'not equal');
wrAssertType('true', "2" != "1", 'not equal');

// ints
wrAssertType('true', 1 == 1, 'equality');
wrAssertType('false', 2 == 1, 'equality');
wrAssertType('true', 1 === 1, 'identity');

wrAssertType('true', 2 > 1, 'greater than');
wrAssertType('false', 1 > 1, 'greater than');

wrAssertType('true', 2 >= 1, 'greater than equal');
wrAssertType('true', 1 >= 1, 'greater than equal');
wrAssertType('false', 0 >= 1, 'greater than equal');

wrAssertType('false', 2 < 1, 'less than');
wrAssertType('true', 1 < 2, 'less than');

wrAssertType('false', 2 <= 1, 'less than equal');
wrAssertType('true', 1 <= 2, 'less than equal');
wrAssertType('true', 2 <= 2, 'less than equal');

// floats
wrAssertType('true', 1.0 == 1.0, 'equality');
wrAssertType('true', 1.0 === 1.0, 'identity');
wrAssertType('true', 1.0 === 1.0, 'identity');

// bool
wrAssertType('true', true == true, 'equality');
wrAssertType('false', true === false, 'identity');


